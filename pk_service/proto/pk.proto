syntax = "proto3";
import "google/protobuf/empty.proto";
option go_package = ".;proto";


service PK{
  rpc TakePartIn(TakePartInRequest) returns(google.protobuf.Empty);
  // 用户参加 -> 返回题目
  rpc Join(JoinRequest) returns (JoinResponse);
  rpc Create(CreateRequest) returns (CreateResponse);
}
enum FindType {
  Find_NOSRV = 0;
//     1. 复仇 查对局表,id,id,time,winner; 如果全胜或者没有对局就返回错误
    Avengers = 1;
  //   2. 随机选择 利用 choose 接口
  Random = 2;
  //   3. 选择敌人 传入 userid
  Choose = 3;
}
message JoinRequest{
  int32 id = 1; // user_id
  FindType find_type = 2;
  int32 other_id = 3;// 如果 find type 是 3 有效
}

// 对局id
message JoinResponse{
  int32 id = 1;
  repeated string question = 2; // 问题
  repeated string answer = 3; // 答案 1-a 2-b 3-c 4-d
}

message CreateResponse{
 int32 id = 1;// 对局id
}

// gin层传递的时候按照
// 1. 自己维护一个 并发 map ?
// 2. 直接传递 我们自己检查
message CreateRequest{
  int32 id1 = 1;
  int32 id2 = 2;
}

message TakePartInRequest{
  int32 id = 1;//party id
  int32 uid = 2; //user id
}